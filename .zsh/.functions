# cds into an directory and make an ls and pwd
function cd {
  builtin cd "$@" && ls && pwd
}

# Shows lines of a file
# Usage: slns <startline> <endline> file
slns() {
  tail -n +$1 $3 | head -n $(($2-$1+1))
}

# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@";
}

# Script to comfortable configure an hdmi monitor on my setup
# Usage: hdmi [--right]
# default is left, if you want to have it right pass --right as an argument
# if you want to use this script by yourself you should simply just change the extern and intern
# monitor names and it should work, ofc if you have standard tools like awk, xrandr, grep as you can see.
function hdmi() {
  local EXTERN='HDMI1'
  local INTERN='eDP1'
  local returnValue=0

  local connected=$(xrandr --query | grep $EXTERN | tail -1 | cut -d \  -f 2)
  local resolution=$(xrandr --query | grep -C 1 HDMI1 | tail -1 | awk '{print $1}')

  if [[ "$connected" == "connected" ]];
  then
    if [[ "$1" == "--right" ]];
    then
      $(xrandr --output $EXTERN --mode $resolution --right-of $INTERN)
    elif [ -z "$1" ]
    then
      $(xrandr --output $EXTERN --mode $resolution --left-of $INTERN)
    else
      echo ERROR: wrong parameter
      returnValue=1
    fi
  else
   echo ERROR:HDMI isn\'t connected
   returnValue=2
  fi

  return $returnValue
}
